{"version":3,"sources":["api/petfinder/index.js","components/hero/index.js","components/pet/index.js","pages/home/index.js","pages/search/index.js","pages/detail/index.js","pages/petDetailsNotFound/index.js","assets/logo.svg","components/search/index.js","components/navigation/index.js","App.js","reportWebVitals.js","index.js","mocks/handlers.js","mocks/browser.js"],"names":["getPets","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","query","searchParams","requestUrl","response","json","_args","arguments","wrap","_context","prev","next","length","undefined","URLSearchParams","concat","toString","fetch","method","sent","abrupt","stop","apply","getPetDetails","_ref2","_callee2","id","_context2","_x","getPetTypes","_ref3","_callee3","_context3","Hero","image","displayText","_jsx","className","style","backgroundImage","backgroundBlendMode","backgroundSize","backgroundColor","children","getHeroTitle","Pet","_animal$photos$","animal","href","toLowerCase","_jsxs","src","photos","medium","alt","name","breeds","primary","colors","gender","HomePage","_useState","useState","_useState2","_slicedToArray","data","setData","useParams","useEffect","_getPetsData","petsData","getPetsData","map","Link","to","SearchPage","search","useLocation","queryParams","useMemo","pets","setPets","petNameToFind","get","pet","PetDetailsPage","_data$photos$","_data$photos$2","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","t0","Redirect","full","description","PetDetailsNotFound","history","useHistory","onClick","goBack","Search","searchInputRef","useRef","onSubmit","e","preventDefault","searchQuery","current","value","push","ref","Navigation","petTypes","setPetTypes","_getPetTypesData","_yield$getPetTypes","types","getPetTypesData","Logo","NavLink","activeClassName","exact","_links","self","split","pop","App","Router","Switch","Route","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","worker","start","ReactDOM","render","React","StrictMode","document","getElementById","handlers","rest","_req","res","ctx","status","req","url","animals","filter","contact","address","state","includes","params","details","setupWorker","_toConsumableArray"],"mappings":"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","file":"static/js/main.b6afb9b8.chunk.js","sourcesContent":["export const getPets = async (type = '', query = '') => {\n  const searchParams = new URLSearchParams({ type, query });\n  const requestUrl = `/animals?${searchParams.toString()}`;\n\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetDetails = async (id) => {\n  const requestUrl = `/animals/${id}`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetTypes = async () => {\n  const requestUrl = `/types`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n","import React from 'react';\n\nconst Hero = ({ image, displayText }) => {\n  const type = ''\n\n  return (\n    <div\n      className=\"hero-container\"\n      style={{\n        backgroundImage: `linear-gradient(black, black), url(\"${\n          image || 'pets-hero.png'\n        }\")\n          `,\n        backgroundBlendMode: 'saturation',\n        backgroundSize: 'cover',\n        backgroundColor: '#0000008f'\n      }}\n    >\n      <h2>{displayText || getHeroTitle(type)}</h2>\n    </div>\n  );\n};\n\nexport default Hero;\n\nconst getHeroTitle = (type) => {\n  switch (type) {\n    case 'dog':\n      return 'Dogs';\n    case 'cat':\n      return 'Cats';\n    case 'rabbit':\n      return 'Rabbits';\n    case 'bird':\n      return 'Birds';\n    default:\n      return 'Find your perfect pet';\n  }\n};\n","import React from 'react';\n\nconst Pet = ({ animal }) => {\n  return (\n    <a\n      key={animal.id}\n      href={`/${animal.type.toLowerCase()}/${animal.id}`}\n      className=\"pet\"\n    >\n      <article>\n        <div className=\"pet-image-container\">\n          {\n            <img\n              className=\"pet-image\"\n              src={\n                animal.photos[0]?.medium || 'https://i.imgur.com/aEcJUFK.png'\n              }\n              alt=\"\"\n            />\n          }\n        </div>\n        <h3>{animal.name}</h3>\n        <p>Breed: {animal.breeds.primary}</p>\n        <p>Color: {animal.colors.primary}</p>\n        <p>Gender: {animal.gender}</p>\n      </article>\n    </a>\n  );\n};\n\nexport default Pet;\n","import React, { useEffect, useState } from 'react';\nimport { getPets } from '../../api/petfinder';\nimport Hero from '../../components/hero';\nimport Pet from '../../components/pet';\nimport { useParams, Link } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [data, setData] = useState(null);\n  const {type} = useParams(); // Fix me!\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petsData = await getPets(type);\n      setData(petsData);\n    }\n\n    getPetsData();\n  }, [type]);\n\n  if (!data) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <div className=\"page\">\n      <Hero />\n      <h3>\n        <span className=\"pet-type-label\">{type ? `${type}s` : 'Pets'}</span>{' '}\n        available for adoption near you\n      </h3>\n\n      {data.length ? (\n        <div className=\"grid\">\n          {data.map((animal) => (\n            <Link // Change me to a Link!\n              key={animal.id}\n              to={`/${animal.type.toLowerCase()}/${animal.id}`}\n              className=\"pet\"\n            >\n              <article>\n                <div className=\"pet-image-container\">\n                  {\n                    <img\n                      className=\"pet-image\"\n                      src={\n                        animal.photos[0]?.medium ||\n                        '/missing-animal.png'\n                      }\n                      alt=\"\"\n                    />\n                  }\n                </div>\n                <h3>{animal.name}</h3>\n                <p>Breed: {animal.breeds.primary}</p>\n                <p>Color: {animal.colors.primary}</p>\n                <p>Gender: {animal.gender}</p>\n              </article>\n            </Link> // Don't forget to change me!\n          ))}\n        </div>\n      ) : (\n        <p className=\"prompt\">No {type}s available for adoption now.</p>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport Hero from '../../components/hero';\nimport { getPets } from '../../api/petfinder';\nimport Pet from '../../components/pet';\n\n// import useLocation here\nimport { useLocation } from 'react-router-dom';\n\nconst SearchPage = () => {\n\n  // Get the search value from useLocation() here\n  const { search } = useLocation();\n\n  const queryParams = useMemo(() => { \n    return new URLSearchParams(search);\n  }, [search]);\n\n  const [pets, setPets] = useState([]);\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petNameToFind = queryParams.get('name');\n      const petsData = await getPets('', petNameToFind);\n\n      setPets(petsData);\n    }\n\n    getPetsData();\n  }, [queryParams]);\n\n  return (\n    <div className=\"page\">\n      <Hero displayText={`Results for ${queryParams.get('name')}`} />\n\n      <h3>Pets available for adoption near you</h3>\n\n      <main>\n        <div className=\"grid\">\n          {pets.map((pet) => (\n            <Pet animal={pet} key={pet.id} />\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import React, { useEffect, useState } from 'react';\nimport { getPetDetails } from '../../api/petfinder';\nimport Hero from '../../components/hero';\nimport { useParams, Redirect } from 'react-router-dom';\n\nconst PetDetailsPage = () => {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { id } = useParams(); // <--- Update me!\n\n  useEffect(() => {\n    async function getPetsData() {\n      try {\n        const petsData = await getPetDetails(id);\n        setData(petsData);\n        setError(false);\n      } catch (e) {\n        setError(true);\n      }\n      setLoading(false);\n    }\n\n    getPetsData();\n  }, [id]);\n\n  return (\n    <div>\n      {loading ? (\n        <h3>Loading...</h3>\n      ) : error ? (\n        <div>\n          {/* Redirect to /pet-details-not-found if there was an error! */}\n          <Redirect to=\"/pet-details-not-found\" />\n        </div>\n      ) : (\n        <main>\n          <Hero\n            image={data.photos[1]?.full || 'https://i.imgur.com/aEcJUFK.png'}\n            displayText={`Meet ${data.name}`}\n          />\n          <div className=\"pet-detail\">\n            <div className=\"pet-image-container\">\n              <img\n                className=\"pet-image\"\n                src={\n                  data.photos[0]?.medium || 'https://i.imgur.com/aEcJUFK.png'\n                }\n                alt=\"\"\n              />\n            </div>\n            <div>\n              <h1>{data.name}</h1>\n              <h3>Breed: {data.breeds.primary}</h3>\n              <p>Color: {data.colors.primary || 'Unknown'}</p>\n              <p>Gender: {data.gender}</p>\n              <h3>Description</h3>\n              <p>{data.description}</p>\n            </div>\n          </div>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default PetDetailsPage;\n","import React from 'react';\n\n// import useHistory here.\nimport { useHistory } from 'react-router-dom';\n\nconst PetDetailsNotFound = () => {\n\n  // get the history object from useHistory()\n  const history = useHistory();\n\n  const goBack = () => {\n    // Go back!\n    history.goBack();\n  }\n  \n  return (\n    <main className=\"page\">\n      <h3>404: Who let the dogs out?</h3>\n      <p>Sorry, but the details for this pet have not been uploaded by the shelter yet. Check back later!</p>\n      <img\n        src=\"https://i.chzbgr.com/full/8362031616/h9EB970C5/weve-lost-our-corgination\"\n        alt=\"\"\n      />\n      <div className=\"actions-container\">\n        <button className=\"button\" onClick={goBack}>\n          Go Back\n        </button>\n      </div>\n    </main>\n  );\n};\n\nexport default PetDetailsNotFound;\n","export default __webpack_public_path__ + \"static/media/logo.c7c56d31.svg\";","import React, { useRef } from 'react';\n\n// import useHistory here.\nimport { useHistory } from 'react-router-dom';\n\nconst Search = () => {\n\n  // get the history object here\n  const history = useHistory();\n\n  const searchInputRef = useRef();\n\n  const onSearchHandler = (e) => {\n    e.preventDefault();\n\n    const searchQuery = new URLSearchParams({\n      name: searchInputRef.current.value\n    }).toString();\n\n    // imperatively redirect with history.push()\n    history.push(`/search?${searchQuery}`);\n  };\n\n  return (\n    <form onSubmit={onSearchHandler} className=\"search-form\">\n      <input type=\"text\" className=\"search\" ref={searchInputRef} />\n      <button type=\"submit\" className=\"search-button\">\n        🔎\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from 'react';\nimport { getPetTypes } from '../../api/petfinder';\nimport Logo from '../../assets/logo.svg';\nimport Search from '../search';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  const [petTypes, setPetTypes] = useState([]);\n\n  useEffect(() => {\n    async function getPetTypesData() {\n      const { types } = await getPetTypes();\n      setPetTypes(types);\n    }\n\n    getPetTypesData();\n  }, []);\n\n  return (\n    <nav>\n      <div className=\"nav-logo\">\n        <img src={Logo} alt=\"Petlover\" />\n        <Search />\n      </div>\n      <ul className=\"nav-links\">\n        <li key=\"all\">\n          {/* This link should have an activeClassName and exact prop */}\n          <NavLink\n            to=\"/\"\n            className=\"nav-link\"\n            activeClassName=\"nav-link-active\"\n            exact\n          >\n            All Pets\n          </NavLink>\n        </li>\n        {petTypes\n          ? petTypes.map((type) => (\n              <li key={type.name}>\n                {/* These links should have an activeClassName prop */}\n                <NavLink\n                  to={`/${type._links.self.href.split('/').pop()}`}\n                  key={type.name}\n                  className=\"nav-link\"\n                  activeClassName=\"nav-link-active\"\n                >\n                  {type.name}s\n                </NavLink>{' '}\n              </li>\n            ))\n          : 'Loading...'}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import HomePage from './pages/home';\nimport SearchPage from './pages/search';\nimport PetDetailsPage from './pages/detail';\nimport PetDetailsNotFound from './pages/petDetailsNotFound';\nimport Navigation from './components/navigation';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Navigation />\n      <Switch>\n        <Route path=\"/search\">\n          <SearchPage />\n        </Route>\n        <Route path=\"/pet-details-not-found\">\n          <PetDetailsNotFound />\n        </Route>\n        <Route path=\"/:type/:id\">\n          <PetDetailsPage />\n        </Route>\n        <Route path=\"/:type?\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst { worker } = require('./mocks/browser');\nworker.start();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { rest } from 'msw';\nimport types from './data/types.json';\nimport animals from './data/animals.json';\nimport details from './data/details.json';\n\nexport const handlers = [\n  rest.get('/types', (_req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(types));\n  }),\n  rest.get('/animals', (req, res, ctx) => {\n    const type = req.url.searchParams.get('type');\n    const query = req.url.searchParams.get('query');\n    let response = animals.animals;\n\n    if (type !== '') {\n      response = response.filter(\n        (animal) => animal.type.toLowerCase() === type.toLowerCase()\n      );\n    }\n    if (query !== '') {\n      response = response.filter(\n        (animal) =>\n          animal.contact.address.state\n            .toLowerCase()\n            .includes(query.toLowerCase()) ||\n          animal.name.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n    return res(ctx.status(200), ctx.json(response));\n  }),\n  rest.get('/animals/:id', (req, res, ctx) => {\n    const { id } = req.params;\n    let response = details[id];\n\n    if (!response) {\n      return res(ctx.status(404));\n    }\n\n    return res(ctx.status(200), ctx.json(response));\n  })\n];\n","import { setupWorker } from 'msw';\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n"],"sourceRoot":""}